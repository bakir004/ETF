undefined: Nije skriven
Koristi svoju main() funckiju

Evo kako izgleda program nakon spajanja njihovog i vaseg koda:
========================================================================

// Vas kod ide ovdje

int main() {
Lista<int>* l;
l = new JednostrukaLista<int>;
for (int i(0); i<40000; i++)
    l->dodajIspred(5);
std::cout << l->trenutni();
delete l;

    return 0;
}

#include <iostream>

========================================================================


Izlaz:

5

########################################################################
########################################################################
########################################################################

undefined: Nije skriven
Koristi svoju main() funckiju

Evo kako izgleda program nakon spajanja njihovog i vaseg koda:
========================================================================

// Vas kod ide ovdje

int main() {
Lista<std::string>* l;
l = new JednostrukaLista<std::string>;
l->dodajIza("abc");
std::string s = l->trenutni();	
std::cout << s;
delete l;

    return 0;
}

#include <string>
#include <iostream>

========================================================================


Izlaz:

abc

########################################################################
########################################################################
########################################################################

undefined: Nije skriven
Koristi svoju main() funckiju

Evo kako izgleda program nakon spajanja njihovog i vaseg koda:
========================================================================

// Vas kod ide ovdje

int main() {
  JednostrukaLista<int> jednostruka;
    NizLista<int> nizLista;
    jednostruka.dodajIspred(1);
    nizLista.dodajIspred(1);
    cout<<jednostruka.trenutni()<<" "<<nizLista.trenutni()<<endl;
    jednostruka.obrisi();
    nizLista.obrisi();
    jednostruka.dodajIza(1);
    jednostruka.dodajIza(2);
    jednostruka.dodajIza(8);
    nizLista.dodajIza(1);
    nizLista.dodajIza(2);
    nizLista.dodajIza(8);
    cout<<jednostruka.trenutni()<<" "<<nizLista.trenutni()<<endl;
    jednostruka.dodajIza(3);
    jednostruka.dodajIza(4);
    jednostruka.dodajIza(5);
    nizLista.dodajIza(3);
    nizLista.dodajIza(4);
    nizLista.dodajIza(5);
    jednostruka.pocetak();
    nizLista.pocetak();
    jednostruka.kraj();
    nizLista.kraj();
    cout<<jednostruka.trenutni()<<" "<<nizLista.trenutni()<<endl;
    jednostruka.pocetak();
    nizLista.pocetak();
    cout<<jednostruka.trenutni()<<" "<<nizLista.trenutni()<<endl;
    jednostruka.sljedeci();
    nizLista.sljedeci();
    cout<<jednostruka.trenutni()<<" "<<nizLista.trenutni()<<endl;
    jednostruka.prethodni();
    nizLista.prethodni();
    cout<<jednostruka.trenutni()<<" "<<nizLista.trenutni()<<endl;
    cout<<jednostruka[1]<<" "<<nizLista[1]<<endl;
    cout<<jednostruka.brojElemenata()<<" "<<nizLista.brojElemenata()<<endl;
    jednostruka.pocetak();
    nizLista.pocetak();
    for(int i=0;i<jednostruka.brojElemenata();i++){
        cout<<jednostruka.trenutni()<<" ";
        jednostruka.sljedeci();
    }
    cout<<endl;
    for(int i=0;i<nizLista.brojElemenata();i++){
        cout<<nizLista.trenutni()<<" ";
        nizLista.sljedeci();
    }
    cout<<endl;

    return 0;
}

#include <iostream>
#include <typeinfo>
using namespace std;

========================================================================


Izlaz:

1 1
1 1
2 2
1 1
5 5
1 1
5 5
6 6
1 5 4 3 8 2 
1 5 4 3 8 2 


########################################################################
########################################################################
########################################################################

undefined: Nije skriven
Koristi svoju main() funckiju

Evo kako izgleda program nakon spajanja njihovog i vaseg koda:
========================================================================

// Vas kod ide ovdje

int main() {
NizLista<int> niz;
for (int i(1); i<=5; i++)
	niz.dodajIspred(i);
{
    NizLista<int> niz2(niz);
    NizLista<int> niz3;
    niz3=niz;
    niz.obrisi();
    std::cout << niz2.brojElemenata();
    std::cout << " " << niz3.brojElemenata() << " ";
}
std::cout << niz.brojElemenata();

    return 0;
}

#include <iostream>

========================================================================


Izlaz:

5 5 4

########################################################################
########################################################################
########################################################################

undefined: Nije skriven
Koristi svoju main() funckiju

Evo kako izgleda program nakon spajanja njihovog i vaseg koda:
========================================================================

// Vas kod ide ovdje

int main() {
JednostrukaLista<int> lista;
for (int i(1); i<=5; i++)
	lista.dodajIspred(i);
{
    JednostrukaLista<int> lista2(lista);
    JednostrukaLista<int> lista3;
    lista3=lista;
    lista.obrisi();
    std::cout << lista2.brojElemenata();
    std::cout << " " << lista3.brojElemenata() << " ";
}
std::cout << lista.brojElemenata();

    return 0;
}

#include <iostream>

========================================================================


Izlaz:

5 5 4

########################################################################
########################################################################
########################################################################

undefined: Nije skriven
Koristi svoju main() funckiju

Evo kako izgleda program nakon spajanja njihovog i vaseg koda:
========================================================================

// Vas kod ide ovdje

int main() {
Lista<int>* l;
l = new NizLista<int>;
for (int i(0); i<100000; i++)
    l->dodajIspred(5);
std::cout << l->trenutni();
delete l;

    return 0;
}

========================================================================


Izlaz:

5

########################################################################
########################################################################
########################################################################

undefined: Nije skriven
Koristi svoju main() funckiju

Evo kako izgleda program nakon spajanja njihovog i vaseg koda:
========================================================================

// Vas kod ide ovdje

int main() {
Lista<std::string>* l;
l = new NizLista<std::string>;
l->dodajIza("abc");
std::string s = l->trenutni();	
std::cout << s;
delete l;

    return 0;
}

========================================================================


Izlaz:

abc

########################################################################
########################################################################
########################################################################

undefined: Nije skriven
Koristi svoju main() funckiju

Evo kako izgleda program nakon spajanja njihovog i vaseg koda:
========================================================================

// Vas kod ide ovdje

int main() {
    Lista<int>* l;
l = new NizLista<int>;
for (int i(1); i<=5; i++)
	l->dodajIza(i);
do {
	std::cout << l->trenutni() << " ";
} while(l->sljedeci());
delete l;

    return 0;
}

========================================================================


Izlaz:

1 5 4 3 2

########################################################################
########################################################################
########################################################################

undefined: Nije skriven
Koristi svoju main() funckiju

Evo kako izgleda program nakon spajanja njihovog i vaseg koda:
========================================================================

// Vas kod ide ovdje

int main() {
Lista<int>* l;
l = new JednostrukaLista<int>;
for (int i(1); i<=5; i++)
	l->dodajIza(i);
l->pocetak();
do {
	std::cout << l->trenutni() << " ";
} while(l->sljedeci());
delete l;

    return 0;
}

========================================================================


Izlaz:

1 5 4 3 2

########################################################################
########################################################################
########################################################################

undefined: Nije skriven
Koristi svoju main() funckiju

Evo kako izgleda program nakon spajanja njihovog i vaseg koda:
========================================================================

// Vas kod ide ovdje

int main() {
Lista<int>* l;
l = new NizLista<int>;
for (int i(1); i<=5; i++)
	l->dodajIspred(i);
for (int i(0); i<5; i++)
	std::cout << (*l)[i] << " ";
delete l;

    return 0;
}

========================================================================


Izlaz:

2 3 4 5 1

########################################################################
########################################################################
########################################################################

undefined: Nije skriven
Koristi svoju main() funckiju

Evo kako izgleda program nakon spajanja njihovog i vaseg koda:
========================================================================

// Vas kod ide ovdje

int main() {
Lista<int>* l;
l = new JednostrukaLista<int>;
for (int i(1); i<=5; i++)
	l->dodajIspred(i);
for (int i(0); i<5; i++)
	std::cout << (*l)[i] << " ";
delete l;

    return 0;
}

========================================================================


Izlaz:

2 3 4 5 1

########################################################################
########################################################################
########################################################################

undefined: Nije skriven
Koristi svoju main() funckiju

Evo kako izgleda program nakon spajanja njihovog i vaseg koda:
========================================================================

// Vas kod ide ovdje

int main() {
NizLista<int> niz;
for (int i(1); i<=10000; i++)
	niz.dodajIspred(i);
std::cout << niz.brojElemenata() << " ";
for (int i(1); i<=10000; i++)
	niz.obrisi();
std::cout << niz.brojElemenata();

    return 0;
}

========================================================================


Izlaz:

10000 0

########################################################################
########################################################################
########################################################################

undefined: Nije skriven
Koristi svoju main() funckiju

Evo kako izgleda program nakon spajanja njihovog i vaseg koda:
========================================================================

// Vas kod ide ovdje

int main() {
NizLista<int> niz;
for (int i(1); i<=5; i++)
	niz.dodajIza(i);
std::cout << niz.brojElemenata() << " ";
for (int i(1); i<=5; i++)
	niz.obrisi();
std::cout << niz.brojElemenata();

    return 0;
}

========================================================================


Izlaz:

5 0

########################################################################
########################################################################
########################################################################

TEST PROBLEM: Nije skriven
Koristi svoju main() funckiju

Evo kako izgleda program nakon spajanja njihovog i vaseg koda:
========================================================================

// Vas kod ide ovdje

int main() {
JednostrukaLista<int> lista;
for (int i(1); i<=10000; i++)
	lista.dodajIspred(i);
std::cout << lista.brojElemenata() << " ";
for (int i(1); i<=10000; i++)
	lista.obrisi();
std::cout << lista.brojElemenata();

    return 0;
}

========================================================================


Izlaz:

10000 0

########################################################################
########################################################################
########################################################################

undefined: Nije skriven
Koristi svoju main() funckiju

Evo kako izgleda program nakon spajanja njihovog i vaseg koda:
========================================================================

// Vas kod ide ovdje

int main() {
JednostrukaLista<int> lista;
for (int i(1); i<=5; i++)
	lista.dodajIza(i);
std::cout << lista.brojElemenata() << " ";
for (int i(1); i<=5; i++)
	lista.obrisi();
std::cout << lista.brojElemenata();

    return 0;
}

========================================================================


Izlaz:

5 0

########################################################################
########################################################################
########################################################################

undefined: Nije skriven
Koristi svoju main() funckiju

Evo kako izgleda program nakon spajanja njihovog i vaseg koda:
========================================================================

// Vas kod ide ovdje

int main() {
JednostrukaLista<int> n;
for (int i(1); i<=5; i++) {
	n.dodajIza(i);
	n.sljedeci();
}
n.pocetak();
n.sljedeci();
n.sljedeci();
n.obrisi();
for (int i(0); i<n.brojElemenata(); i++)
	std::cout << n[i] << " ";
std::cout << n.trenutni();

    return 0;
}

========================================================================


Izlaz:

1 2 4 5 4

########################################################################
########################################################################
########################################################################

undefined: Nije skriven
Koristi svoju main() funckiju

Evo kako izgleda program nakon spajanja njihovog i vaseg koda:
========================================================================

// Vas kod ide ovdje

int main() {
NizLista<int> n;
n.dodajIza(5);
const int& x(n[0]);
n.dodajIspred(10);
std::cout << x;

    return 0;
}

========================================================================


Izlaz:

5

########################################################################
########################################################################
########################################################################

undefined: Nije skriven
Koristi svoju main() funckiju

Evo kako izgleda program nakon spajanja njihovog i vaseg koda:
========================================================================

// Vas kod ide ovdje

int main() {
NizLista<int> niz;
for (int i(1); i<=5; i++)
	niz.dodajIspred(i);
const NizLista<int>& konst(niz);
std::cout << konst.brojElemenata() << " " << konst.trenutni();
std::cout << " " << konst[0] << std::endl;
niz.trenutni() = 15;
niz[0] = 20;
std::cout << konst.trenutni() << " " << konst[0] << std::endl;

    return 0;
}

========================================================================


Izlaz:

5 1 2
15 20

########################################################################
########################################################################
########################################################################

undefined: Nije skriven
Koristi svoju main() funckiju

Evo kako izgleda program nakon spajanja njihovog i vaseg koda:
========================================================================

// Vas kod ide ovdje

int main() {
JednostrukaLista<int> lista;
for (int i(1); i<=5; i++)
	lista.dodajIspred(i);
const JednostrukaLista<int>& konst(lista);
std::cout << konst.brojElemenata() << " " << konst.trenutni();
std::cout << " " << konst[0] << std::endl;
lista.trenutni() = 15;
lista[0] = 20;
std::cout << konst.trenutni() << " " << konst[0] << std::endl;

    return 0;
}

========================================================================


Izlaz:

5 1 2
15 20

########################################################################
########################################################################
########################################################################

undefined: Nije skriven
Koristi svoju main() funckiju

Evo kako izgleda program nakon spajanja njihovog i vaseg koda:
========================================================================

// Vas kod ide ovdje

int main() {
NizLista<int> n;
for (int i(1); i<=5; i++) {
	n.dodajIza(i);
	n.sljedeci();
}
n.pocetak();
n.sljedeci();
n.sljedeci();
n.obrisi();
for (int i(0); i<n.brojElemenata(); i++)
	std::cout << n[i] << " ";
std::cout << n.trenutni();

    return 0;
}

========================================================================


Izlaz:

1 2 4 5 4

########################################################################
########################################################################
########################################################################

