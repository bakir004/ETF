<input type="hidden" name="task" value="{&quot;id&quot;:0,&quot;name&quot;:&quot;Tehnike programiranja, SkriveniZ 5, Zadatak 5&quot;,&quot;version&quot;:&quot;3&quot;,&quot;languages&quot;:[&quot;C++&quot;],&quot;tools&quot;:{&quot;compile&quot;:{&quot;require&quot;:&quot;g++&quot;,&quot;features&quot;:[&quot;optimize&quot;,&quot;warn&quot;,&quot;pedantic&quot;,&quot;C++14&quot;]},&quot;compile[debug]&quot;:{&quot;require&quot;:&quot;g++&quot;,&quot;features&quot;:[&quot;debug&quot;,&quot;C++14&quot;,&quot;asan&quot;]},&quot;execute&quot;:{&quot;require&quot;:&quot;asan&quot;},&quot;debug&quot;:[],&quot;profile[asan]&quot;:{&quot;require&quot;:&quot;asan&quot;,&quot;input_file&quot;:&quot;stderr.txt&quot;,&quot;fast&quot;:true}},&quot;prepare&quot;:[&quot;compile&quot;],&quot;tests&quot;:[{&quot;tools&quot;:[&quot;compile[debug]&quot;,{&quot;execute&quot;:{&quot;expect&quot;:[&quot;Unesite broj redova i kolona za matricu: Unesite elemente matrice:\n(1,1) = (1,2) = (1,3) = (1,4) = (2,1) = (2,2) = (2,3) = (2,4) = (3,1) = (3,2) = (3,3) = (3,4) = Unesite ime tekstualne datoteke: Unesite ime binarne datoteke: Ucitana matrica iz tekstualne datoteke: \n2.5-31.124\n00.253.1642.3\n-1.72.505\nUcitana matrica iz binarne datoteke:\n2.5-31.124\n00.253.1642.3\n-1.72.505&quot;],&quot;environment&quot;:{&quot;stdin&quot;:&quot;3 4\n2.5\n-3\n1.12\n4\n0\n0.25\n3.16\n42.3\n-1.7\n2.5\n0\n5\ntest.txt\ntest.dat&quot;}}},&quot;debug&quot;,&quot;profile[asan]&quot;],&quot;name&quot;:&quot;Test 1&quot;,&quot;id&quot;:1},{&quot;tools&quot;:[{&quot;patch&quot;:[{&quot;position&quot;:&quot;main&quot;,&quot;code&quot;:&quot;int br_redova = 2;\n        int br_kolona = 3;\n        Matrica<double> m(br_redova, br_kolona);\n        m(1, 1) = 1.1;\n        m(1, 2) = 2.2;\n        m(1, 3) = 3.3;\n        m(2, 1) = 4.4;\n        m(2, 2) = 5.5;\n        m(2, 3) = 6.6;\n\n        std::string filenameText = \&quot;test_matrix.txt\&quot;;\n        m.SacuvajUTekstualnuDatoteku(filenameText);\n\n        std::ifstream file(filenameText);\n\n        \/\/ open file and print all content\n        while (!file.eof())\n        {\n            std::string line;\n            std::getline(file, line);\n            std::cout << line << std::endl;\n        }&quot;}]},&quot;compile[debug]&quot;,{&quot;execute&quot;:{&quot;expect&quot;:[&quot;1.1,2.2,3.3\n4.4,5.5,6.6&quot;]}},&quot;debug&quot;,&quot;profile[asan]&quot;],&quot;name&quot;:&quot;Test 2&quot;,&quot;id&quot;:2,&quot;options&quot;:[&quot;hidden&quot;]},{&quot;tools&quot;:[{&quot;patch&quot;:[{&quot;position&quot;:&quot;main&quot;,&quot;code&quot;:&quot;int br_redova = 2;\n        int br_kolona = 3;\n        Matrica<double> m(br_redova, br_kolona);\n        m(1, 1) = 1.1;\n        m(1, 2) = 2.2;\n        m(1, 3) = 3.3;\n        m(2, 1) = 4.4;\n        m(2, 2) = 5.5;\n        m(2, 3) = 6.6;\n\n        std::string filenameText = \&quot;test_matrix.dat\&quot;;\n        m.SacuvajUBinarnuDatoteku(filenameText);\n    \n        std::ifstream file(filenameText, std::ios::binary);\n\n        \/\/ open binary file and print all content\n        Matrica<double> m2(br_redova, br_kolona);\n        m2.ObnoviIzBinarneDatoteke(filenameText);\n        std::cout << m2 << std::endl;&quot;}]},&quot;compile[debug]&quot;,{&quot;execute&quot;:{&quot;expect&quot;:[&quot;1.12.23.3\n4.45.56.6&quot;]}},&quot;debug&quot;,&quot;profile[asan]&quot;],&quot;name&quot;:&quot;Test 3&quot;,&quot;id&quot;:3,&quot;options&quot;:[&quot;hidden&quot;]},{&quot;tools&quot;:[{&quot;patch&quot;:[{&quot;position&quot;:&quot;main&quot;,&quot;code&quot;:&quot;        const std::string filename = \&quot;binary_file.dat\&quot;;\n        Matrica<double> m(3, 4);\n        m(1,1) = 2.5; m(1,2) = -3; m(1,3) = 1.12; m(1,4) = 4;\n        m(2,1) = 0; m(2,2) = 0.25; m(2,3) = 3.16; m(2,4) = 42.3;\n        m(3,1) = -1.7; m(3,2) = 2.5; m(3,3) = 0; m(3,4) = 5;\n        m.SacuvajUBinarnuDatoteku(filename);\n\n        try\n        {\n            Matrica<double> m2(0,0);\n            m2.ObnoviIzBinarneDatoteke(\&quot;nepostojeca.dat\&quot;);\n        }\n        catch(const std::exception&amp; e)\n        {\n            std::cout << e.what() << '\\n';\n        }\n\n        Matrica<double> m2(0,0);\n        m2.ObnoviIzBinarneDatoteke(filename);\n\n        std::cout << m2;&quot;}]},&quot;compile[debug]&quot;,{&quot;execute&quot;:{&quot;expect&quot;:[&quot;Trazena datoteka ne postoji\n2.5-31.124\n00.253.1642.3\n-1.72.505&quot;]}},&quot;debug&quot;,&quot;profile[asan]&quot;],&quot;name&quot;:&quot;Test 4&quot;,&quot;id&quot;:5,&quot;options&quot;:[&quot;hidden&quot;]},{&quot;tools&quot;:[{&quot;patch&quot;:[{&quot;position&quot;:&quot;main&quot;,&quot;code&quot;:&quot;        const std::string filename = \&quot;file.txt\&quot;;\n        Matrica<double> m(3, 4);\n        m(1,1) = 2.5; m(1,2) = -3; m(1,3) = 1.12; m(1,4) = 4;\n        m(2,1) = 0; m(2,2) = 0.25; m(2,3) = 3.16; m(2,4) = 42.3;\n        m(3,1) = -1.7; m(3,2) = 2.5; m(3,3) = 0; m(3,4) = 5;\n        m.SacuvajUTekstualnuDatoteku(filename);\n\n        Matrica<double> m2(0,0);\n        try\n        {\n            m2.ObnoviIzTekstualneDatoteke(\&quot;nepostojeca.txt\&quot;);\n        }\n        catch (const std::exception &amp;e)\n        {\n            std::cout << e.what() << '\\n';\n        }\n\n        m2.ObnoviIzTekstualneDatoteke(filename);\n\n        std::cout << m2;&quot;}]},&quot;compile[debug]&quot;,{&quot;execute&quot;:{&quot;expect&quot;:[&quot;Trazena datoteka ne postoji\n2.5-31.124\n00.253.1642.3\n-1.72.505&quot;]}},&quot;debug&quot;,&quot;profile[asan]&quot;],&quot;name&quot;:&quot;Test 5&quot;,&quot;id&quot;:6,&quot;options&quot;:[&quot;hidden&quot;]},{&quot;tools&quot;:[{&quot;patch&quot;:[{&quot;position&quot;:&quot;main&quot;,&quot;code&quot;:&quot;        const std::string filename = \&quot;file.txt\&quot;;\n        Matrica<double> m(3, 4);\n        m(1,1) = 2.5; m(1,2) = -3; m(1,3) = 1.12; m(1,4) = 4;\n        m(2,1) = 0; m(2,2) = 0.25; m(2,3) = 3.16; m(2,4) = 42.3;\n        m(3,1) = -1.7; m(3,2) = 2.5; m(3,3) = 0; m(3,4) = 5;\n        m.SacuvajUTekstualnuDatoteku(filename);\n\n        \/\/ random text\n        char data[] = \&quot;Hello, world!\&quot;;\n        std::ofstream file(filename, std::ios::app);\n        file.write(reinterpret_cast<const char*>(data), sizeof(data));\n\n        try\n        {\n            Matrica<double> m2(filename, false);\n            std::cout << m2;\n        }\n        catch (const std::exception &amp;e)\n        {\n            std::cout << e.what() << '\\n';\n        }&quot;}]},&quot;compile[debug]&quot;,{&quot;execute&quot;:{&quot;expect&quot;:[&quot;Datoteka sadrzi besmislene podatke&quot;]}},&quot;debug&quot;,&quot;profile[asan]&quot;],&quot;name&quot;:&quot;Test 6&quot;,&quot;id&quot;:7},{&quot;tools&quot;:[{&quot;patch&quot;:[{&quot;position&quot;:&quot;main&quot;,&quot;code&quot;:&quot;const std::string filename = \&quot;file.txt\&quot;;\n        Matrica<double> m(3, 4);\n        m(1,1) = 2.5; m(1,2) = -3; m(1,3) = 1.12; m(1,4) = 4;\n        m(2,1) = 0; m(2,2) = 0.25; m(2,3) = 3.16; m(2,4) = 42.3;\n        m(3,1) = -1.7; m(3,2) = 2.5; m(3,3) = 0; m(3,4) = 5;\n        m.SacuvajUTekstualnuDatoteku(filename);\n\n        Matrica<double> m2(filename, false);\n        \n        std::cout << m2 << std::endl;&quot;}]},&quot;compile[debug]&quot;,{&quot;execute&quot;:{&quot;expect&quot;:[&quot;2.5-31.124\n00.253.1642.3\n-1.72.505&quot;]}},&quot;debug&quot;,&quot;profile[asan]&quot;],&quot;name&quot;:&quot;Test 7&quot;,&quot;id&quot;:9,&quot;options&quot;:[&quot;hidden&quot;]},{&quot;tools&quot;:[{&quot;patch&quot;:[{&quot;position&quot;:&quot;main&quot;,&quot;code&quot;:&quot;const std::string filename = \&quot;file.dat\&quot;;\n        Matrica<double> m(3, 4);\n        m(1,1) = 2.5; m(1,2) = -3; m(1,3) = 1.12; m(1,4) = 4;\n        m(2,1) = 0; m(2,2) = 0.25; m(2,3) = 3.16; m(2,4) = 42.3;\n        m(3,1) = -1.7; m(3,2) = 2.5; m(3,3) = 0; m(3,4) = 5;\n        m.SacuvajUBinarnuDatoteku(filename);\n\n        Matrica<double> m2(filename, true);\n\n        std::cout << m2 << std::endl;&quot;}]},&quot;compile[debug]&quot;,{&quot;execute&quot;:{&quot;expect&quot;:[&quot;2.5-31.124\n00.253.1642.3\n-1.72.505&quot;]}},&quot;debug&quot;,&quot;profile[asan]&quot;],&quot;name&quot;:&quot;Test 8&quot;,&quot;id&quot;:10}],&quot;code&quot;:&quot;200&quot;}">
