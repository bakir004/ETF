<input type="hidden" name="task" value="{&quot;id&quot;:0,&quot;name&quot;:&quot;Tehnike programiranja, S_Z 5, Zadatak 5&quot;,&quot;version&quot;:&quot;3&quot;,&quot;languages&quot;:[&quot;C++&quot;],&quot;tools&quot;:{&quot;compile&quot;:{&quot;require&quot;:&quot;g++&quot;,&quot;features&quot;:[&quot;optimize&quot;,&quot;warn&quot;,&quot;pedantic&quot;,&quot;C++17&quot;]},&quot;compile[debug]&quot;:{&quot;require&quot;:&quot;g++&quot;,&quot;features&quot;:[&quot;debug&quot;,&quot;C++17&quot;,&quot;asan&quot;]},&quot;execute&quot;:{&quot;require&quot;:&quot;asan&quot;},&quot;debug&quot;:[],&quot;profile[asan]&quot;:{&quot;require&quot;:&quot;asan&quot;,&quot;input_file&quot;:&quot;stderr.txt&quot;,&quot;fast&quot;:true}},&quot;prepare&quot;:[&quot;compile&quot;],&quot;tests&quot;:[{&quot;tools&quot;:[{&quot;patch&quot;:[{&quot;position&quot;:&quot;top_of_file&quot;,&quot;code&quot;:&quot;\/\/---------------------------------------------------------------------------------------------------------------\n\/\/ Tehnike programiranja - Akademska 2024\/2025 godina\n\/\/ Zada\u0107a 5 - Zadatak 5\n\/\/ Odgovorni asistent: Kerim Hodzic, kerim.hodzic@etf.unsa.ba\n\/\/ Za sva tehni\u010dka pitanja vezana za autotestove za zadatak 5, obratite se na navedeni mail.\n\/\/---------------------------------------------------------------------------------------------------------------&quot;},{&quot;position&quot;:&quot;main&quot;,&quot;code&quot;:&quot;\/\/ AT1 - testiranje izuzetaka konstruktora\n    {\n        try\n        {\n            Matrica<int> m1(\&quot;datoteka.DAT\&quot;, true);\n        }\n        catch (const std::logic_error&amp; e)\n        {\n            std::cout << \&quot;Izuzetak: \&quot; << e.what() << std::endl;\n        }\n\n        try\n        {\n            Matrica<int> m1(\&quot;datoteka.txt\&quot;, false);\n        }\n        catch (const std::logic_error&amp; e)\n        {\n            std::cout << \&quot;Izuzetak: \&quot; << e.what() << std::endl;\n        }\n    }&quot;}]},&quot;compile[debug]&quot;,{&quot;execute&quot;:{&quot;expect&quot;:[&quot;Izuzetak: Trazena datoteka ne postoji\nIzuzetak: Trazena datoteka ne postoji\n&quot;]}},&quot;debug&quot;,&quot;profile[asan]&quot;],&quot;name&quot;:&quot;Test 1&quot;,&quot;id&quot;:1},{&quot;tools&quot;:[{&quot;patch&quot;:[{&quot;position&quot;:&quot;main&quot;,&quot;code&quot;:&quot;\/\/AT 2: Testiranje izuzetaka metoda ObnoviIzTekstualneDatoteke i ObnoviIzBinarneDatoteke\n    {\n        try\n        {\n            Matrica<int> m1(2,2);\n            m1.ObnoviIzBinarneDatoteke(\&quot;datoteka.DAT\&quot;);\n        }\n        catch (const std::logic_error&amp; e)\n        {\n            std::cout << \&quot;Izuzetak: \&quot; << e.what() << std::endl;\n        }\n\n        try\n        {\n            Matrica<int> m1(2,2);\n            m1.ObnoviIzTekstualneDatoteke(\&quot;datoteka.txt\&quot;);\n        }\n        catch (const std::logic_error&amp; e)\n        {\n            std::cout << \&quot;Izuzetak: \&quot; << e.what() << std::endl;\n        }\n    }&quot;}]},&quot;compile[debug]&quot;,{&quot;execute&quot;:{&quot;expect&quot;:[&quot;Izuzetak: Trazena datoteka ne postoji\nIzuzetak: Trazena datoteka ne postoji\n&quot;]}},&quot;debug&quot;,&quot;profile[asan]&quot;],&quot;name&quot;:&quot;Test 2&quot;,&quot;id&quot;:2},{&quot;tools&quot;:[{&quot;patch&quot;:[{&quot;position&quot;:&quot;above_main&quot;,&quot;code&quot;:&quot;void kreirajDatotetkuZbii1()\n{\n    std::string ime = \&quot;matrica.txt\&quot;;\n    std::ofstream dat(ime);\n    dat << \&quot;1, 2\\n3, 4\&quot;;\n    dat.close();\n}\n\nvoid kreirajDatotetkuZbii2()\n{\n    std::string ime = \&quot;matrica.txt\&quot;;\n    std::ofstream dat(ime);\n    dat << \&quot;1.4, 2.54\\n3.7, -4.7\&quot;;\n    dat.close();\n}&quot;},{&quot;position&quot;:&quot;main&quot;,&quot;code&quot;:&quot;\/\/AT 3: Testiranje konstruktora za u\u010ditavanje iz tekstualne datoteke\n    {\n        try\n        {\n            kreirajDatotetkuZbii1();\n            Matrica<int> m1(\&quot;matrica.txt\&quot;, false);\n            std::cout << std::setw(6) << m1;\n        }\n        catch (const std::logic_error&amp; e)\n        {\n            std::cout << \&quot;Izuzetak: \&quot; << e.what() << std::endl;\n        }\n        std::cout << std::endl << std::endl;\n        try\n        {\n            kreirajDatotetkuZbii2();\n            Matrica<double> m1(\&quot;matrica.txt\&quot;, false);\n            std::cout << std::setw(6) << m1;\n        }\n        catch (const std::logic_error&amp; e)\n        {\n            std::cout << \&quot;Izuzetak: \&quot; << e.what() << std::endl;\n        }\n    }&quot;}]},&quot;compile[debug]&quot;,{&quot;execute&quot;:{&quot;expect&quot;:[&quot;     1     2\n     3     4\n\n\n   1.4  2.54\n   3.7  -4.7\n&quot;]}},&quot;debug&quot;,&quot;profile[asan]&quot;],&quot;name&quot;:&quot;Test 3&quot;,&quot;id&quot;:3},{&quot;tools&quot;:[{&quot;patch&quot;:[{&quot;position&quot;:&quot;main&quot;,&quot;code&quot;:&quot;\/\/AT 4: Testiranje konstruktora za u\u010ditavanje iz binarne datoteke\n    {\n        try\n        {\n            Matrica<int> m0{2, 2};\n            for (int i{0}; i < 2; i++)\n                for (int j{0}; j < 2; j++)\n                    m0[i][j] = i + j;\n            m0.SacuvajUBinarnuDatoteku(\&quot;matrica1.DAT\&quot;);\n            Matrica<int> m1(\&quot;matrica1.DAT\&quot;, true);\n            std::cout << std::setw(6) << m1;\n        }\n        catch (const std::logic_error&amp; e)\n        {\n            std::cout << \&quot;Izuzetak: \&quot; << e.what() << std::endl;\n        }\n\n        std::cout << std::endl << std::endl;\n\n        try\n        {\n            Matrica<double> m0{2, 2};\n            for (int i{0}; i < 2; i++)\n                for (int j{0}; j < 2; j++)\n                    m0[i][j] = i + j + 0.5;\n            m0.SacuvajUBinarnuDatoteku(\&quot;matrica2.DAT\&quot;);\n            Matrica<double> m1(\&quot;matrica2.DAT\&quot;, true);\n            std::cout << std::setw(6) << m1;\n        }\n        catch (const std::logic_error&amp; e)\n        {\n            std::cout << \&quot;Izuzetak: \&quot; << e.what() << std::endl;\n        }\n    }&quot;}]},&quot;compile[debug]&quot;,{&quot;execute&quot;:{&quot;expect&quot;:[&quot;     0     1\n     1     2\n\n\n   0.5   1.5\n   1.5   2.5\n&quot;]}},&quot;debug&quot;,&quot;profile[asan]&quot;],&quot;name&quot;:&quot;Test 4&quot;,&quot;id&quot;:4},{&quot;tools&quot;:[{&quot;patch&quot;:[{&quot;position&quot;:&quot;main&quot;,&quot;code&quot;:&quot;\/\/AT 5: testiranje izuzetaka metoda ObnoviIzBinarneDatoteke i ObnoviIzTekstualneDatoteke\n    \/\/kada u matricama vec postoje elementi\n    {\n        try\n        {\n            Matrica<int> m0{2, 2};\n            for (int i{0}; i < 2; i++)\n                for (int j{0}; j < 2; j++)\n                    m0[i][j] = i + j;\n            std::cout << std::setw(6) << m0;\n            m0.ObnoviIzBinarneDatoteke(\&quot;AT5.DAT\&quot;);\n            std::cout << std::setw(6) << m0;\n\n        }\n        catch (const std::logic_error&amp; e)\n        {\n            std::cout << \&quot;Izuzetak: \&quot; << e.what() << std::endl;\n        }\n\n        std::cout << std::endl << std::endl;\n\n        try\n        {\n            Matrica<double> m0{2, 2};\n            for (int i{0}; i < 2; i++)\n                for (int j{0}; j < 2; j++)\n                    m0[i][j] = i + j + 0.5;\n            std::cout << std::setw(6) << m0;\n            m0.ObnoviIzTekstualneDatoteke(\&quot;AT5.txt\&quot;);\n            std::cout << std::setw(6) << m0;\n        }\n        catch (const std::logic_error&amp; e)\n        {\n            std::cout << \&quot;Izuzetak: \&quot; << e.what() << std::endl;\n        }\n    }&quot;}]},&quot;compile[debug]&quot;,{&quot;execute&quot;:{&quot;expect&quot;:[&quot;     0     1\n     1     2\nIzuzetak: Trazena datoteka ne postoji\n\n\n   0.5   1.5\n   1.5   2.5\nIzuzetak: Trazena datoteka ne postoji\n&quot;]}},&quot;debug&quot;,&quot;profile[asan]&quot;],&quot;name&quot;:&quot;Test 5&quot;,&quot;id&quot;:5},{&quot;tools&quot;:[{&quot;patch&quot;:[{&quot;position&quot;:&quot;above_main&quot;,&quot;code&quot;:&quot;void kreirajKiks()\n{\n    std::string ime = \&quot;matrica2.txt\&quot;;\n    std::ofstream dat(ime);\n    dat << \&quot;1.4{2.54@3.7*-4.7\&quot;;\n    dat.close();\n}&quot;},{&quot;position&quot;:&quot;main&quot;,&quot;code&quot;:&quot;\/\/AT 6: Testiranje konstruktora kada su u datotekama besmisleni podaci\n    {\n        try\n        {\n            kreirajKiks();\n            Matrica<double> m1(\&quot;matrica2.txt\&quot;, false);\n            std::cout << \&quot;Ovo se ne smije ispisati.\&quot; << std::endl;\n        }\n        catch (const std::logic_error&amp; e)\n        {\n            std::cout << \&quot;Izuzetak: \&quot; << e.what() << std::endl;\n        }\n    }&quot;}]},&quot;compile[debug]&quot;,{&quot;execute&quot;:{&quot;expect&quot;:[&quot;Izuzetak: Datoteka sadrzi besmislene podatke&quot;]}},&quot;debug&quot;,&quot;profile[asan]&quot;],&quot;name&quot;:&quot;Test 6&quot;,&quot;id&quot;:6},{&quot;tools&quot;:[{&quot;patch&quot;:[{&quot;position&quot;:&quot;above_main&quot;,&quot;code&quot;:&quot;void kreirajDatotetkuDobar()\n{\n    std::string ime = \&quot;matrica1.txt\&quot;;\n    std::ofstream dat(ime);\n    dat << \&quot;1, 2\\n3, 4\&quot;;\n    dat.close();\n}\n\nvoid kreirajDatotetkuKiks()\n{\n    std::string ime = \&quot;matrica4.txt\&quot;;\n    std::ofstream dat(ime);\n    dat << \&quot;1.4{2.54@3.7*-4.7\&quot;;\n    dat.close();\n}&quot;},{&quot;position&quot;:&quot;main&quot;,&quot;code&quot;:&quot;\/\/AT 7: Testiranje izuzetaka metoda ObnoviIzBinarneDatoteke i ObnoviIzTekstualneDatoteke\n    \/\/kada su u datotekama besmisleni podaci\n    {\n        kreirajDatotetkuDobar();\n        kreirajDatotetkuKiks();\n        Matrica<int> m1(\&quot;matrica1.txt\&quot;, false);\n        try\n        {\n\n            std::cout << std::setw(6) << m1;\n            m1.ObnoviIzTekstualneDatoteke(\&quot;matrica4.txt\&quot;);\n            std::cout << \&quot;Ovo se ne smije ispisati.\&quot; << std::endl;\n        }\n        catch (const std::logic_error&amp; e)\n        {\n            std::cout << \&quot;Izuzetak: \&quot; << e.what() << std::endl;\n        }\n    }&quot;}]},&quot;compile[debug]&quot;,{&quot;execute&quot;:{&quot;expect&quot;:[&quot;     1     2\n     3     4\nIzuzetak: Datoteka sadrzi besmislene podatke\n&quot;]}},&quot;debug&quot;,&quot;profile[asan]&quot;],&quot;name&quot;:&quot;Test 7&quot;,&quot;id&quot;:7}],&quot;code&quot;:&quot;200&quot;}">
